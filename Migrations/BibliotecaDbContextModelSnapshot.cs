// <auto-generated />
using System;
using Biblioteca;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Biblioteca.Migrations
{
    [DbContext(typeof(BibliotecaDbContext))]
    partial class BibliotecaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Biblioteca.Models.Autor", b =>
                {
                    b.Property<int>("AutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AutorID"));

                    b.Property<DateOnly?>("AutorDataNascimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValue(new DateOnly(2024, 11, 13));

                    b.Property<string>("AutorEmail")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("AutorNome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.HasKey("AutorID");

                    b.HasIndex("AutorNome");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Biblioteca.Models.AutorLivro", b =>
                {
                    b.Property<int>("AutorID")
                        .HasColumnType("integer");

                    b.Property<int>("LivroID")
                        .HasColumnType("integer");

                    b.Property<int>("OrdemAutoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("AutorID", "LivroID");

                    b.HasIndex("LivroID");

                    b.ToTable("AutoresLivros");
                });

            modelBuilder.Entity("Biblioteca.Models.Editora", b =>
                {
                    b.Property<int>("EditoraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EditoraID"));

                    b.Property<string>("EditoraCEP")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<string>("EditoraCidade")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("EditoraComplemento")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("EditoraLogradouro")
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("EditoraNome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int?>("EditoraNumero")
                        .HasColumnType("integer");

                    b.Property<string>("EditoraPais")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("EditoraTelefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("EditoraUF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("EditoraID");

                    b.HasIndex("EditoraNome");

                    b.ToTable("Editoras");
                });

            modelBuilder.Entity("Biblioteca.Models.Livro", b =>
                {
                    b.Property<int>("LivroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LivroID"));

                    b.Property<int>("EditoraID")
                        .HasColumnType("integer");

                    b.Property<int>("LivroAnoPublicacao")
                        .HasColumnType("integer");

                    b.Property<string>("LivroISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<int>("LivroPaginas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("LivroTituloNacional")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("LivroTituloOriginal")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("LivroID");

                    b.HasIndex("EditoraID");

                    b.HasIndex("LivroTituloNacional");

                    b.HasIndex("LivroTituloOriginal");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("Biblioteca.Models.OperacaoCompraVenda", b =>
                {
                    b.Property<int>("OperacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OperacaoID"));

                    b.Property<int>("LivroID")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("OperacaoData")
                        .HasColumnType("date");

                    b.Property<short>("OperacaoQuantidade")
                        .HasColumnType("smallint");

                    b.HasKey("OperacaoID");

                    b.HasIndex("LivroID");

                    b.HasIndex("OperacaoData");

                    b.ToTable("OperacoesCompraVenda");
                });

            modelBuilder.Entity("Biblioteca.Models.AutorLivro", b =>
                {
                    b.HasOne("Biblioteca.Models.Autor", "Autor")
                        .WithMany("LivrosDoAutor")
                        .HasForeignKey("AutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Models.Livro", "Livro")
                        .WithMany("AutoresDoLivro")
                        .HasForeignKey("LivroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Biblioteca.Models.Livro", b =>
                {
                    b.HasOne("Biblioteca.Models.Editora", "LivroEditora")
                        .WithMany("EditoraLivros")
                        .HasForeignKey("EditoraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LivroEditora");
                });

            modelBuilder.Entity("Biblioteca.Models.OperacaoCompraVenda", b =>
                {
                    b.HasOne("Biblioteca.Models.Livro", "OperacaoLivro")
                        .WithMany("LivroOperacoes")
                        .HasForeignKey("LivroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperacaoLivro");
                });

            modelBuilder.Entity("Biblioteca.Models.Autor", b =>
                {
                    b.Navigation("LivrosDoAutor");
                });

            modelBuilder.Entity("Biblioteca.Models.Editora", b =>
                {
                    b.Navigation("EditoraLivros");
                });

            modelBuilder.Entity("Biblioteca.Models.Livro", b =>
                {
                    b.Navigation("AutoresDoLivro");

                    b.Navigation("LivroOperacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
